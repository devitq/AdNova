{
    "annotations": {
        "list": [
            {
                "builtIn": 1,
                "datasource": {
                    "type": "grafana",
                    "uid": "-- Grafana --"
                },
                "enable": true,
                "hide": true,
                "iconColor": "rgba(0, 211, 255, 1)",
                "name": "Annotations & Alerts",
                "type": "dashboard"
            }
        ]
    },
    "description": "A dashboard that monitors Django which focuses on giving a overview for requests.",
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 13,
    "links": [
        {
            "tags": ["backend"],
            "targetBlank": true,
            "title": "Backend Dashboards",
            "type": "dashboards"
        }
    ],
    "liveNow": true,
    "panels": [
        {
            "collapsed": false,
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 0
            },
            "id": 1,
            "panels": [],
            "title": "Summary",
            "type": "row"
        },
        {
            "datasource": {
                "type": "datasource",
                "uid": "-- Mixed --"
            },
            "fieldConfig": {
                "defaults": {
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "red"
                            },
                            {
                                "color": "green",
                                "value": 0.001
                            }
                        ]
                    },
                    "unit": "reqps"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 4,
                "w": 6,
                "x": 0,
                "y": 1
            },
            "id": 2,
            "options": {
                "colorMode": "value",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "auto",
                "percentChangeColorMode": "standard",
                "reduceOptions": {
                    "calcs": ["lastNotNull"],
                    "fields": "",
                    "values": false
                },
                "showPercentChange": false,
                "textMode": "auto",
                "wideLayout": true
            },
            "pluginVersion": "12.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "round(\n  sum(\n    rate(\n      django_http_requests_total_by_view_transport_method_total{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n        view=~\"$view\",\n        view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics\",\n        method=~\"$method\"\n      }[$__rate_interval]\n    )\n  ), 0.001\n)\n",
                    "refId": "A"
                }
            ],
            "title": "Request Volume",
            "type": "stat"
        },
        {
            "datasource": {
                "type": "datasource",
                "uid": "-- Mixed --"
            },
            "fieldConfig": {
                "defaults": {
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "red"
                            },
                            {
                                "color": "yellow",
                                "value": 0.95
                            },
                            {
                                "color": "green",
                                "value": 0.99
                            }
                        ]
                    },
                    "unit": "percentunit"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 4,
                "w": 6,
                "x": 6,
                "y": 1
            },
            "id": 3,
            "options": {
                "colorMode": "value",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "auto",
                "percentChangeColorMode": "standard",
                "reduceOptions": {
                    "calcs": ["lastNotNull"],
                    "fields": "",
                    "values": false
                },
                "showPercentChange": false,
                "textMode": "auto",
                "wideLayout": true
            },
            "pluginVersion": "12.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "sum(\n  rate(\n    django_http_responses_total_by_status_view_method_total{\n      namespace=~\"$namespace\",\n      job=~\"$job\",\n      view=~\"$view\",\n      view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics\",\n      method=~\"$method\",\n      status!~\"[4-5].*\"\n    }[$__rate_interval]\n  )\n) /\nsum(\n  rate(\n    django_http_responses_total_by_status_view_method_total{\n      namespace=~\"$namespace\",\n      job=~\"$job\",\n      view=~\"$view\",\n      view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics\",\n      method=~\"$method\"\n    }[$__rate_interval]\n  )\n)\n",
                    "refId": "A"
                }
            ],
            "title": "Success Rate (non 4-5xx responses)",
            "type": "stat"
        },
        {
            "datasource": {
                "type": "datasource",
                "uid": "-- Mixed --"
            },
            "fieldConfig": {
                "defaults": {
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "green"
                            },
                            {
                                "color": "yellow",
                                "value": 2500
                            },
                            {
                                "color": "red",
                                "value": 5000
                            }
                        ]
                    },
                    "unit": "s"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 4,
                "w": 6,
                "x": 12,
                "y": 1
            },
            "id": 4,
            "options": {
                "colorMode": "value",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "auto",
                "percentChangeColorMode": "standard",
                "reduceOptions": {
                    "calcs": ["lastNotNull"],
                    "fields": "",
                    "values": false
                },
                "showPercentChange": false,
                "textMode": "auto",
                "wideLayout": true
            },
            "pluginVersion": "12.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "histogram_quantile(0.95,\n  sum (\n    irate(\n      django_http_requests_latency_seconds_by_view_method_bucket{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n        view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics\",\n      }[$__rate_interval]\n    )\n  ) by (job, le)\n)\n",
                    "refId": "A"
                }
            ],
            "title": "Request Latency (P95)",
            "type": "stat"
        },
        {
            "datasource": {
                "type": "datasource",
                "uid": "-- Mixed --"
            },
            "fieldConfig": {
                "defaults": {
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "red"
                            },
                            {
                                "color": "yellow",
                                "value": 0.2
                            },
                            {
                                "color": "green",
                                "value": 0.3
                            }
                        ]
                    },
                    "unit": "decbytes"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 4,
                "w": 6,
                "x": 18,
                "y": 1
            },
            "id": 5,
            "options": {
                "colorMode": "value",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "auto",
                "percentChangeColorMode": "standard",
                "reduceOptions": {
                    "calcs": ["lastNotNull"],
                    "fields": "",
                    "values": false
                },
                "showPercentChange": false,
                "textMode": "auto",
                "wideLayout": true
            },
            "pluginVersion": "12.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "histogram_quantile(0.95,\n  sum (\n    rate (\n        django_http_requests_body_total_bytes_bucket {\n          namespace=~\"$namespace\",\n          job=~\"$job\",\n        }[$__rate_interval]\n    )\n  ) by (job, le)\n)\n",
                    "refId": "A"
                }
            ],
            "title": "Request Body Size (P95)",
            "type": "stat"
        },
        {
            "collapsed": false,
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 5
            },
            "id": 6,
            "panels": [],
            "title": "API Views & Other",
            "type": "row"
        },
        {
            "datasource": {
                "type": "datasource",
                "uid": "-- Mixed --"
            },
            "fieldConfig": {
                "defaults": {
                    "color": {
                        "mode": "palette-classic"
                    },
                    "custom": {
                        "axisBorderShow": false,
                        "axisCenteredZero": false,
                        "axisColorMode": "text",
                        "axisLabel": "",
                        "axisPlacement": "auto",
                        "barAlignment": 0,
                        "barWidthFactor": 0.6,
                        "drawStyle": "line",
                        "fillOpacity": 100,
                        "gradientMode": "none",
                        "hideFrom": {
                            "legend": false,
                            "tooltip": false,
                            "viz": false
                        },
                        "insertNulls": false,
                        "lineInterpolation": "linear",
                        "lineWidth": 1,
                        "pointSize": 5,
                        "scaleDistribution": {
                            "type": "linear"
                        },
                        "showPoints": "auto",
                        "spanNulls": false,
                        "stacking": {
                            "group": "A",
                            "mode": "value"
                        },
                        "thresholdsStyle": {
                            "mode": "off"
                        }
                    },
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "green"
                            },
                            {
                                "color": "red",
                                "value": 80
                            }
                        ]
                    },
                    "unit": "reqps"
                },
                "overrides": [
                    {
                        "matcher": {
                            "id": "byName",
                            "options": "2xx"
                        },
                        "properties": [
                            {
                                "id": "color",
                                "value": {
                                    "fixedColor": "green",
                                    "mode": "fixed"
                                }
                            }
                        ]
                    },
                    {
                        "matcher": {
                            "id": "byName",
                            "options": "4xx"
                        },
                        "properties": [
                            {
                                "id": "color",
                                "value": {
                                    "fixedColor": "yellow",
                                    "mode": "fixed"
                                }
                            }
                        ]
                    },
                    {
                        "matcher": {
                            "id": "byName",
                            "options": "5xx"
                        },
                        "properties": [
                            {
                                "id": "color",
                                "value": {
                                    "fixedColor": "red",
                                    "mode": "fixed"
                                }
                            }
                        ]
                    }
                ]
            },
            "gridPos": {
                "h": 10,
                "w": 12,
                "x": 0,
                "y": 6
            },
            "id": 7,
            "options": {
                "legend": {
                    "calcs": ["mean", "max"],
                    "displayMode": "table",
                    "placement": "right",
                    "showLegend": true,
                    "sortBy": "Mean",
                    "sortDesc": true
                },
                "tooltip": {
                    "hideZeros": false,
                    "mode": "multi",
                    "sort": "desc"
                }
            },
            "pluginVersion": "12.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "round(\n  sum(\n    rate(\n      django_http_responses_total_by_status_view_method_total{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n        view=~\"$view\",\n        view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics\",\n        method=~\"$method\",\n        status=~\"2.*\",\n        view!~\"admin.*\",\n      }[$__rate_interval]\n    ) > 0\n  ) by (namespace, job, view), 0.001\n)\n",
                    "legendFormat": "{{ view }} / 2xx",
                    "refId": "A"
                },
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "round(\n  sum(\n    rate(\n      django_http_responses_total_by_status_view_method_total{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n        view=~\"$view\",\n        view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics\",\n        method=~\"$method\",\n        status=~\"4.*\",\n        view!~\"admin.*\",\n      }[$__rate_interval]\n    ) > 0\n  ) by (namespace, job, view), 0.001\n)\n",
                    "legendFormat": "{{ view }} / 4xx",
                    "refId": "B"
                },
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "round(\n  sum(\n    rate(\n      django_http_responses_total_by_status_view_method_total{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n        view=~\"$view\",\n        view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics\",\n        method=~\"$method\",\n        status=~\"5.*\",\n        view!~\"admin.*\",\n      }[$__rate_interval]\n    ) > 0\n  ) by (namespace, job, view), 0.001\n)\n",
                    "legendFormat": "{{ view }} / 5xx",
                    "refId": "C"
                }
            ],
            "title": "API & Other Views Response Status",
            "type": "timeseries"
        },
        {
            "datasource": {
                "type": "datasource",
                "uid": "-- Mixed --"
            },
            "fieldConfig": {
                "defaults": {
                    "custom": {
                        "align": "auto",
                        "cellOptions": {
                            "type": "auto"
                        },
                        "inspect": false
                    },
                    "mappings": [],
                    "thresholds": {
                        "mode": "absolute",
                        "steps": [
                            {
                                "color": "green"
                            },
                            {
                                "color": "red",
                                "value": 80
                            }
                        ]
                    },
                    "unit": "dtdurations"
                },
                "overrides": [
                    {
                        "matcher": {
                            "id": "byName",
                            "options": "View"
                        },
                        "properties": [
                            {
                                "id": "links",
                                "value": [
                                    {
                                        "targetBlank": true,
                                        "title": "Go To View",
                                        "type": "dashboard",
                                        "url": "/d/django-requests-by-view-jkwq/django-requests-by-view?var-namespace=${__data.fields.Namespace}&var-job=${__data.fields.Job}&var-view=${__data.fields.View}"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "gridPos": {
                "h": 10,
                "w": 12,
                "x": 12,
                "y": 6
            },
            "id": 8,
            "options": {
                "cellHeight": "sm",
                "footer": {
                    "countRows": false,
                    "enablePagination": true,
                    "fields": "",
                    "reducer": ["sum"],
                    "show": false
                },
                "showHeader": true,
                "sortBy": [
                    {
                        "desc": true,
                        "displayName": "P50 Latency"
                    }
                ]
            },
            "pluginVersion": "12.0.2",
            "targets": [
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "histogram_quantile(0.50,\n  sum(\n    rate(\n      django_http_requests_latency_seconds_by_view_method_bucket{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n        view=~\"$view\",\n        view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics|\",\n        view!~\"admin.*\",\n        method=~\"$method\"\n      }[1h]\n    ) > 0\n  ) by (namespace, job, view, le)\n)\n",
                    "format": "table",
                    "instant": true,
                    "refId": "A"
                },
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "histogram_quantile(0.95,\n  sum(\n    rate(\n      django_http_requests_latency_seconds_by_view_method_bucket{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n        view=~\"$view\",\n        view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics|\",\n        view!~\"admin.*\",\n        method=~\"$method\"\n      }[1h]\n    ) > 0\n  ) by (namespace, job, view, le)\n)\n",
                    "format": "table",
                    "instant": true,
                    "refId": "B"
                },
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "histogram_quantile(0.99,\n  sum(\n    rate(\n      django_http_requests_latency_seconds_by_view_method_bucket{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n        view=~\"$view\",\n        view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics|\",\n        view!~\"admin.*\",\n        method=~\"$method\"\n      }[1h]\n    ) > 0\n  ) by (namespace, job, view, le)\n)\n",
                    "format": "table",
                    "instant": true,
                    "refId": "C"
                }
            ],
            "title": "API & Other Views Request Latency [1h]",
            "transformations": [
                {
                    "id": "merge"
                },
                {
                    "id": "organize",
                    "options": {
                        "excludeByName": {
                            "Time": true
                        },
                        "indexByName": {
                            "Value #A": 3,
                            "Value #B": 4,
                            "Value #C": 5,
                            "job": 1,
                            "namespace": 0,
                            "view": 2
                        },
                        "renameByName": {
                            "Value #A": "P50 Latency",
                            "Value #B": "P95 Latency",
                            "Value #C": "P99 Latency",
                            "job": "Job",
                            "namespace": "Namespace",
                            "view": "View"
                        }
                    }
                }
            ],
            "type": "table"
        },
        {
            "collapsed": false,
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 16
            },
            "id": 9,
            "panels": [],
            "title": "Admin Views",
            "type": "row"
        },
        {
            "datasource": {
                "type": "datasource",
                "uid": "-- Mixed --"
            },
            "fieldConfig": {
                "defaults": {
                    "custom": {
                        "fillOpacity": 100,
                        "spanNulls": false,
                        "stacking": {
                            "mode": "value"
                        }
                    },
                    "unit": "reqps"
                },
                "overrides": [
                    {
                        "matcher": {
                            "id": "byName",
                            "options": "2xx"
                        },
                        "properties": [
                            {
                                "id": "color",
                                "value": {
                                    "fixedColor": "green",
                                    "mode": "fixed"
                                }
                            }
                        ]
                    },
                    {
                        "matcher": {
                            "id": "byName",
                            "options": "4xx"
                        },
                        "properties": [
                            {
                                "id": "color",
                                "value": {
                                    "fixedColor": "yellow",
                                    "mode": "fixed"
                                }
                            }
                        ]
                    },
                    {
                        "matcher": {
                            "id": "byName",
                            "options": "5xx"
                        },
                        "properties": [
                            {
                                "id": "color",
                                "value": {
                                    "fixedColor": "red",
                                    "mode": "fixed"
                                }
                            }
                        ]
                    }
                ]
            },
            "gridPos": {
                "h": 10,
                "w": 12,
                "x": 0,
                "y": 17
            },
            "id": 10,
            "options": {
                "legend": {
                    "calcs": ["mean", "max"],
                    "displayMode": "table",
                    "placement": "right",
                    "showLegend": true,
                    "sortBy": "Mean",
                    "sortDesc": true
                },
                "tooltip": {
                    "mode": "multi",
                    "sort": "desc"
                }
            },
            "pluginVersion": "v11.4.0",
            "targets": [
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "round(\n  sum(\n    rate(\n      django_http_responses_total_by_status_view_method_total{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n        view=~\"$view\",\n        view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics\",\n        method=~\"$method\",\n        status=~\"2.*\",\n        view=~\"admin.*\",\n      }[$__rate_interval]\n    ) > 0\n  ) by (namespace, job, view), 0.001\n)\n",
                    "legendFormat": "{{ view }} / 2xx",
                    "refId": "A"
                },
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "round(\n  sum(\n    rate(\n      django_http_responses_total_by_status_view_method_total{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n        view=~\"$view\",\n        view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics\",\n        method=~\"$method\",\n        status=~\"4.*\",\n        view=~\"admin.*\",\n      }[$__rate_interval]\n    ) > 0\n  ) by (namespace, job, view), 0.001\n)\n",
                    "legendFormat": "{{ view }} / 4xx",
                    "refId": "B"
                },
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "round(\n  sum(\n    rate(\n      django_http_responses_total_by_status_view_method_total{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n        view=~\"$view\",\n        view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics\",\n        method=~\"$method\",\n        status=~\"5.*\",\n        view=~\"admin.*\",\n      }[$__rate_interval]\n    ) > 0\n  ) by (namespace, job, view), 0.001\n)\n",
                    "legendFormat": "{{ view }} / 5xx",
                    "refId": "C"
                }
            ],
            "title": "Admin Views Response Status",
            "type": "timeseries"
        },
        {
            "datasource": {
                "type": "datasource",
                "uid": "-- Mixed --"
            },
            "fieldConfig": {
                "defaults": {
                    "unit": "dtdurations"
                },
                "overrides": [
                    {
                        "matcher": {
                            "id": "byName",
                            "options": "View"
                        },
                        "properties": [
                            {
                                "id": "links",
                                "value": [
                                    {
                                        "targetBlank": true,
                                        "title": "Go To View",
                                        "type": "dashboard",
                                        "url": "/d/django-requests-by-view-jkwq/django-requests-by-view?var-namespace=${__data.fields.Namespace}&var-job=${__data.fields.Job}&var-view=${__data.fields.View}"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "gridPos": {
                "h": 10,
                "w": 12,
                "x": 12,
                "y": 17
            },
            "id": 11,
            "options": {
                "footer": {
                    "enablePagination": true
                },
                "sortBy": [
                    {
                        "desc": true,
                        "displayName": "P50 Latency"
                    }
                ]
            },
            "pluginVersion": "v11.4.0",
            "targets": [
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "histogram_quantile(0.50,\n  sum(\n    rate(\n      django_http_requests_latency_seconds_by_view_method_bucket{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n        view=~\"$view\",\n        view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics|\",\n        view=~\"admin.*\",\n        method=~\"$method\"\n      }[1h]\n    ) > 0\n  ) by (namespace, job, view, le)\n)\n",
                    "format": "table",
                    "instant": true,
                    "refId": "A"
                },
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "histogram_quantile(0.95,\n  sum(\n    rate(\n      django_http_requests_latency_seconds_by_view_method_bucket{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n        view=~\"$view\",\n        view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics|\",\n        view=~\"admin.*\",\n        method=~\"$method\"\n      }[1h]\n    ) > 0\n  ) by (namespace, job, view, le)\n)\n",
                    "format": "table",
                    "instant": true,
                    "refId": "B"
                },
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "histogram_quantile(0.99,\n  sum(\n    rate(\n      django_http_requests_latency_seconds_by_view_method_bucket{\n        namespace=~\"$namespace\",\n        job=~\"$job\",\n        view=~\"$view\",\n        view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics|\",\n        view=~\"admin.*\",\n        method=~\"$method\"\n      }[1h]\n    ) > 0\n  ) by (namespace, job, view, le)\n)\n",
                    "format": "table",
                    "instant": true,
                    "refId": "C"
                }
            ],
            "title": "Admin Request Latency [1h]",
            "transformations": [
                {
                    "transformations": [
                        {
                            "id": "merge"
                        },
                        {
                            "id": "organize",
                            "options": {
                                "excludeByName": {
                                    "Time": true
                                },
                                "indexByName": {
                                    "Value #A": 3,
                                    "Value #B": 4,
                                    "Value #C": 5,
                                    "job": 1,
                                    "namespace": 0,
                                    "view": 2
                                },
                                "renameByName": {
                                    "Value #A": "P50 Latency",
                                    "Value #B": "P95 Latency",
                                    "Value #C": "P99 Latency",
                                    "job": "Job",
                                    "namespace": "Namespace",
                                    "view": "View"
                                }
                            }
                        }
                    ]
                }
            ],
            "type": "table"
        },
        {
            "collapsed": false,
            "gridPos": {
                "h": 1,
                "w": 24,
                "x": 0,
                "y": 27
            },
            "id": 12,
            "panels": [],
            "title": "Weekly Breakdown",
            "type": "row"
        },
        {
            "datasource": {
                "type": "datasource",
                "uid": "-- Mixed --"
            },
            "fieldConfig": {
                "defaults": {
                    "unit": "short"
                },
                "overrides": [
                    {
                        "matcher": {
                            "id": "byName",
                            "options": "View"
                        },
                        "properties": [
                            {
                                "id": "links",
                                "value": [
                                    {
                                        "targetBlank": true,
                                        "title": "Go To View",
                                        "type": "dashboard",
                                        "url": "/d/django-requests-by-view-jkwq/django-requests-by-view?var-namespace=${__data.fields.Namespace}&var-job=${__data.fields.Job}&var-view=${__data.fields.View}"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 28
            },
            "id": 13,
            "options": {
                "footer": {
                    "enablePagination": true
                },
                "sortBy": [
                    {
                        "desc": true,
                        "displayName": "Value"
                    }
                ]
            },
            "pluginVersion": "v11.4.0",
            "targets": [
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "round(\n  topk(10,\n    sum by (namespace, job, view) (\n      increase(\n        django_http_exceptions_total_by_view_total{\n          namespace=~\"$namespace\",\n          job=~\"$job\",\n          view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics\",\n        }[1w]\n      ) > 0\n    )\n  )\n)\n",
                    "format": "table",
                    "instant": true,
                    "refId": "A"
                }
            ],
            "title": "Top Exceptions by View (1w)",
            "transformations": [
                {
                    "id": "organize",
                    "options": {
                        "excludeByName": {
                            "Time": true
                        },
                        "indexByName": {
                            "job": 1,
                            "namespace": 0,
                            "view": 2
                        },
                        "renameByName": {
                            "job": "Job",
                            "namespace": "Namespace",
                            "view": "View"
                        }
                    }
                }
            ],
            "type": "table"
        },
        {
            "datasource": {
                "type": "datasource",
                "uid": "-- Mixed --"
            },
            "fieldConfig": {
                "defaults": {
                    "unit": "short"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 28
            },
            "id": 14,
            "options": {
                "footer": {
                    "enablePagination": true
                },
                "sortBy": [
                    {
                        "desc": true,
                        "displayName": "Value"
                    }
                ]
            },
            "pluginVersion": "v11.4.0",
            "targets": [
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "round(\n  topk(10,\n    sum by (namespace, job, type) (\n      increase(\n        django_http_exceptions_total_by_type_total{\n          namespace=~\"$namespace\",\n          job=~\"$job\",\n        }[1w]\n      ) > 0\n    )\n  )\n)\n",
                    "format": "table",
                    "instant": true,
                    "refId": "A"
                }
            ],
            "title": "Top Exceptions by Type (1w)",
            "transformations": [
                {
                    "id": "organize",
                    "options": {
                        "excludeByName": {
                            "Time": true
                        },
                        "indexByName": {
                            "job": 1,
                            "namespace": 0,
                            "type": 2
                        },
                        "renameByName": {
                            "job": "Job",
                            "namespace": "Namespace",
                            "type": "Type"
                        }
                    }
                }
            ],
            "type": "table"
        },
        {
            "datasource": {
                "type": "datasource",
                "uid": "-- Mixed --"
            },
            "fieldConfig": {
                "defaults": {
                    "unit": "short"
                },
                "overrides": [
                    {
                        "matcher": {
                            "id": "byName",
                            "options": "View"
                        },
                        "properties": [
                            {
                                "id": "links",
                                "value": [
                                    {
                                        "targetBlank": true,
                                        "title": "Go To View",
                                        "type": "dashboard",
                                        "url": "/d/django-requests-by-view-jkwq/django-requests-by-view?var-namespace=${__data.fields.Namespace}&var-job=${__data.fields.Job}&var-view=${__data.fields.View}"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 36
            },
            "id": 15,
            "options": {
                "footer": {
                    "enablePagination": true
                },
                "sortBy": [
                    {
                        "desc": true,
                        "displayName": "Value"
                    }
                ]
            },
            "pluginVersion": "v11.4.0",
            "targets": [
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "round(\n  topk(10,\n    sum by (namespace, job, view) (\n      increase(\n        django_http_responses_total_by_status_view_method_total{\n          namespace=~\"$namespace\",\n          job=~\"$job\",\n          view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics\",\n          method=~\"$method\"\n        }[1w]\n      ) > 0\n    )\n  )\n)\n",
                    "format": "table",
                    "instant": true,
                    "refId": "A"
                }
            ],
            "title": "Top Responses By View (1w)",
            "transformations": [
                {
                    "id": "organize",
                    "options": {
                        "excludeByName": {
                            "Time": true
                        },
                        "indexByName": {
                            "job": 1,
                            "namespace": 0,
                            "view": 2
                        },
                        "renameByName": {
                            "job": "Job",
                            "namespace": "Namespace",
                            "view": "View"
                        }
                    }
                }
            ],
            "type": "table"
        },
        {
            "datasource": {
                "type": "datasource",
                "uid": "-- Mixed --"
            },
            "fieldConfig": {
                "defaults": {
                    "unit": "short"
                },
                "overrides": []
            },
            "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 36
            },
            "id": 16,
            "options": {
                "footer": {
                    "enablePagination": true
                },
                "sortBy": [
                    {
                        "desc": true,
                        "displayName": "Value"
                    }
                ]
            },
            "pluginVersion": "v11.4.0",
            "targets": [
                {
                    "datasource": {
                        "type": "prometheus",
                        "uid": "$datasource"
                    },
                    "expr": "topk(10,\n  round(\n    sum by (namespace, job, templatename) (\n      increase(\n        django_http_responses_total_by_templatename_total{\n          namespace=~\"$namespace\",\n          job=~\"$job\",\n          templatename!~\".*'health_check/index.html'.*|None\"\n        }[1w]\n      ) > 0\n    )\n  )\n)\n",
                    "format": "table",
                    "instant": true,
                    "refId": "A"
                }
            ],
            "title": "Top Templates (1w)",
            "transformations": [
                {
                    "id": "organize",
                    "options": {
                        "excludeByName": {
                            "Time": true
                        },
                        "indexByName": {
                            "job": 1,
                            "namespace": 0,
                            "templatename": 2
                        },
                        "renameByName": {
                            "job": "Job",
                            "namespace": "Namespace",
                            "templatename": "Template Name"
                        }
                    }
                }
            ],
            "type": "table"
        }
    ],
    "preload": false,
    "refresh": "5s",
    "schemaVersion": 41,
    "tags": ["backend"],
    "templating": {
        "list": [
            {
                "label": "Data source",
                "name": "datasource",
                "query": "prometheus",
                "refresh": 1,
                "type": "datasource"
            },
            {
                "datasource": {
                    "type": "prometheus",
                    "uid": "${datasource}"
                },
                "includeAll": false,
                "label": "Namespace",
                "name": "namespace",
                "query": "label_values(django_http_responses_total_by_status_view_method_total{}, namespace)",
                "refresh": 2,
                "sort": 1,
                "type": "query"
            },
            {
                "datasource": {
                    "type": "prometheus",
                    "uid": "${datasource}"
                },
                "includeAll": false,
                "label": "Job",
                "name": "job",
                "query": "label_values(django_http_responses_total_by_status_view_method_total{namespace=~\"$namespace\"}, job)",
                "refresh": 2,
                "sort": 1,
                "type": "query"
            },
            {
                "datasource": {
                    "type": "prometheus",
                    "uid": "${datasource}"
                },
                "includeAll": true,
                "label": "View",
                "multi": true,
                "name": "view",
                "query": "label_values(django_http_responses_total_by_status_view_method_total{namespace=~\"$namespace\", job=~\"$job\", view!~\"<unnamed view>|health_check:health_check_home|prometheus-django-metrics\"}, view)",
                "refresh": 2,
                "sort": 1,
                "type": "query"
            },
            {
                "datasource": {
                    "type": "prometheus",
                    "uid": "${datasource}"
                },
                "includeAll": true,
                "label": "Method",
                "multi": true,
                "name": "method",
                "query": "label_values(django_http_responses_total_by_status_view_method_total{namespace=~\"$namespace\", job=~\"$job\", view=~\"$view\"}, method)",
                "refresh": 2,
                "sort": 1,
                "type": "query"
            }
        ]
    },
    "time": {
        "from": "now-30m",
        "to": "now"
    },
    "timepicker": {},
    "timezone": "browser",
    "title": "Requests / Overview",
    "uid": "backend-requests-overview",
    "version": 3,
    "weekStart": "monday"
}
